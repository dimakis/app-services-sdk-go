/*
 * Connector Service Fleet Manager
 *
 * Connector Service Fleet Manager is a Rest API to manage connectors.
 *
 * API version: 0.1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package connectormgmtclient

import (
	"encoding/json"
)

// ConnectorClusterTarget Targets workloads to an addon cluster
type ConnectorClusterTarget struct {

	Kind string `json:"kind"`

	ClusterId *string `json:"cluster_id,omitempty"`

}

// NewConnectorClusterTarget instantiates a new ConnectorClusterTarget object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectorClusterTarget(kind string) *ConnectorClusterTarget {
	this := ConnectorClusterTarget{}
	this.Kind = kind
	return &this
}

// NewConnectorClusterTargetWithDefaults instantiates a new ConnectorClusterTarget object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectorClusterTargetWithDefaults() *ConnectorClusterTarget {
	this := ConnectorClusterTarget{}



	return &this
}


// GetKind returns the Kind field value
func (o *ConnectorClusterTarget) GetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *ConnectorClusterTarget) GetKindOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *ConnectorClusterTarget) SetKind(v string) {
	o.Kind = v
}


// GetClusterId returns the ClusterId field value if set, zero value otherwise.
func (o *ConnectorClusterTarget) GetClusterId() string {
	if o == nil || o.ClusterId == nil {
		var ret string
		return ret
	}
	return *o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorClusterTarget) GetClusterIdOk() (*string, bool) {
	if o == nil || o.ClusterId == nil {
		return nil, false
	}
	return o.ClusterId, true
}

// HasClusterId returns a boolean if a field has been set.
func (o *ConnectorClusterTarget) HasClusterId() bool {
	if o != nil && o.ClusterId != nil {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given string and assigns it to the ClusterId field.
func (o *ConnectorClusterTarget) SetClusterId(v string) {
	o.ClusterId = &v
}


func (o ConnectorClusterTarget) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	
	if true {
		toSerialize["kind"] = o.Kind
	}
    
	if o.ClusterId != nil {
		toSerialize["cluster_id"] = o.ClusterId
	}
    
	return json.Marshal(toSerialize)
}

type NullableConnectorClusterTarget struct {
	value *ConnectorClusterTarget
	isSet bool
}

func (v NullableConnectorClusterTarget) Get() *ConnectorClusterTarget {
	return v.value
}

func (v *NullableConnectorClusterTarget) Set(val *ConnectorClusterTarget) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectorClusterTarget) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectorClusterTarget) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectorClusterTarget(val *ConnectorClusterTarget) *NullableConnectorClusterTarget {
	return &NullableConnectorClusterTarget{value: val, isSet: true}
}

func (v NullableConnectorClusterTarget) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectorClusterTarget) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

